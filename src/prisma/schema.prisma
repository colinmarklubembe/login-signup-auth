generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                  String    @id @default(auto()) @map("_id") @db.ObjectId
  email               String    @unique
  password            String
  firstName           String
  middleName          String?
  lastName            String
  isVerified          Boolean?  @default(false)
  verificationToken   String?
  forgotPasswordToken String?
  userType            UserType  @default(USER)
  isActivated         Boolean   @default(false)
  organizationId      String?
  createdAt           DateTime?
  updatedAt           DateTime?
}

model Role {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  name        String           @unique
  permissions RolePermission[] @relation("RolePermissions")
  createdAt   DateTime?
  updatedAt   DateTime?
}

model Permission {
  id          String           @id @default(auto()) @map("_id") @db.ObjectId
  name        String           @unique
  description String?
  roles       RolePermission[] @relation("RolePermissions")
}

model Tasks {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  dueDate     DateTime
  status      String
  priority    String
  assignedTo  String    @db.ObjectId
  assignedBy  String    @db.ObjectId
  createdAt   DateTime?
  updatedAt   DateTime?
}

model RolePermission {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  roleId       String @db.ObjectId
  permissionId String @db.ObjectId

  role       Role       @relation("RolePermissions", fields: [roleId], references: [id])
  permission Permission @relation("RolePermissions", fields: [permissionId], references: [id])

  @@unique([roleId, permissionId])
}

type Address {
  addressLine1 String
  addressLine2 String?
  city         String
  region       String
  postalCode   String?
  country      String
}

enum UserType {
  OWNER
  ADMIN
  USER
}
